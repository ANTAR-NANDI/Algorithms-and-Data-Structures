#include<bits/stdc++.h>
using namespace std;
int arr[10000];
int tree[30000];

void init(int node, int b, int e){
    if(b == e){
         tree[node] = arr[b];
         return;
    }
    int left = 2*node;
    int right = 2*node + 1;
    int m = (b+e)/2;
    init(left,b,m);
    init(right,m+1,e);
    tree[node] = tree[left]+tree[right];
}

int query(int node, int b, int e, int i, int j){
    if(e<i || b>j) return 0;
    else if(e<=j && b>=i){
        return tree[node];
    }
    int left = 2*node;
    int right = 2*node + 1;
    int m = (b+e)/2;
    int v1 = query(left,b,m,i,j);
    int v2 = query(right,m+1,e,i,j);
    return v1 + v2;
}

void update(int node, int b, int e, int i, int value){
    if(i<b || i>e) return;
    else if(b<=i && e>=i){
        tree[node] = value;
        return;
    }
    int left = 2*node;
    int right = 2*node + 1;
    int m = (b+e)/2;
    init(left,b,m);
    init(right,m+1,e);
    tree[node] = tree[left]+tree[right];
}

int main()
{
    int n;
    cin>>n;
    for(int i = 1 ; i<=n ; i++) cin>>arr[i];

    init(1,1,n);
    int i,j;
    cin>>i>>j;
    cout<<query(1,1,n,i,j);
}
